{
 open Formula_prop
}

%start main
%layout [' ' '\t' '\n']

%parser

main: expr eof { $1 }

expr:
	| "X_" ['0'-'9']+  { PVar (int_of_string $2) }
	| "X_{" ['0'-'9']+ "}" { PVar (int_of_string $2) }
	| "(" expr ")" { $2 }
	| "\\lnot" expr { PNeg($2) }
	| expr "\\implies" expr { PImpl($1,$3) }
	| expr "\\land" expr { PAnd($1,$3) }
	| expr "\\lor" expr { POr($1,$3) }


%%

{
let formula_from_string s = 
(*	print_string s;flush stdout;*)
	let l = (main (Dyp.from_string (pp ()) s))
   in 
   match l with [ (f,s) ] -> f 
              |   _   -> raise (Failure "[Prop] Parser.formula_from_string")
}
%mli {
val formula_from_string : string -> Formula_prop.formula_prop 
}
